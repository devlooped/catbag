// <auto-generated />
#region License
// MIT License
// 
// Copyright (c) Daniel Cazzulino
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
#endregion

#nullable enable
namespace System.Xml
{
    /// <summary>
    /// An <see cref="XmlReader"/> that sets the <see cref="BaseURI"/> of the 
    /// read content to the specified value.
    /// </summary>
    /// <remarks>
    /// Whenever you want to preserve or change the URI that a given XML source 
    /// (i.e. an <c>XDocument</c>) came from, you can use this class so that 
    /// APIs that consume an <see cref="XmlReader"/> automatically get the new value.
    /// <para>
    /// For example, this changes the <see cref="BaseUri"/> of a document being read:
    /// </para>
    /// <code>
    /// var doc = XDocument.Load(new BaseUriXmlReader(newBaseUri, xmlReader), LoadOptions.SetBaseUri);
    /// 
    /// Assert.Equal(newBaseUri, doc.BaseUri);
    /// </code>
    /// </remarks>
    partial class BaseUriXmlReader : XmlWrappingReader
    {
        readonly string baseURI;

        /// <summary>
        /// Initializes the reader with the given base URI to use and the 
        /// <see cref="XmlReader"/> being wrapped.
        /// </summary>
        /// <param name="baseURI">The new URI to use as content is read.</param>
        /// <param name="baseReader">The <see cref="XmlReader"/> being wrapped.</param>
        public BaseUriXmlReader(string baseURI, XmlReader baseReader) : base(baseReader)
            => this.baseURI = baseURI;

        /// <inheritdoc />
        public override string BaseURI => baseURI;
    }
}
